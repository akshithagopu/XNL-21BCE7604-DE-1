services:
  ed-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ed-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ed-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ed-kafka
    depends_on:
      - ed-zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ed-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ed-kafka:29092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka-init.sh:/kafka-init.sh
    entrypoint: ["/bin/sh", "-c", "/kafka-init.sh & /etc/confluent/docker/run"]

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: finance_db
    ports:
      - "5432:5432"

  spark:
    build: ./spark  # Uses custom Dockerfile
    container_name: spark
    environment:
      SPARK_MODE: master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./app:/app  # Mounts app directory with scripts
    command: ["spark-submit", "/app/consumer_spark.py"]

  dashboard:
    build: ./dashboard
    container_name: dashboard
    depends_on:
      - spark
    volumes:
      - ./app:/app
    working_dir: /app
    command: ["streamlit", "run", "dashboard.py", "--server.port=8501", "--server.address=0.0.0.0"]

        
    ports:
      - "8501:8501"


